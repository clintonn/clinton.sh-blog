{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/posts/$slug.tsx", "../app/post.server.ts", "../app/routes/posts/index.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction, LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from \"./styles/index.css\";\n\nexport const links: LinksFunction = () => [\n  {\n    rel: \"stylesheet\",\n    href: styles,\n  },\n];\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"p-10\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getPost } from \"~/post.server\";\nimport invariant from \"tiny-invariant\";\n\nexport const loader: LoaderFunction = ({ params }) => {\n  invariant(params.slug, \"Missing slug\");\n  const post = getPost(params.slug);\n  if (!post) {\n    throw new Response(\"Not found\", { status: 404 });\n  }\n  return json(post);\n};\n\nexport default function PostSlug() {\n  const post = useLoaderData();\n\n  return (\n    <main>\n      <h1 className=\"text-2xl font-bold\">Some Post</h1>\n      <pre>{JSON.stringify(post)}</pre>\n    </main>\n  );\n}\n", "import path from \"path\";\nimport fs from \"fs\";\nimport { unified } from \"unified\";\nimport remarkParse from \"remark-parse\";\nimport remarkFrontmatter from \"remark-frontmatter\";\nimport { json } from \"@remix-run/node\";\n\nexport const getPost = async (slug: string) => {\n  const postsDirectory = path.resolve(__dirname, \"../posts\");\n  try {\n    const post = fs.readFileSync(`${postsDirectory}/${slug}.md`, \"utf8\");\n    const file = await unified()\n      .use(remarkParse)\n      .use(remarkFrontmatter)\n      .parse(post);\n    return json({});\n  } catch {\n    return null;\n  }\n};\n", "import { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\n\ntype Post = {\n  slug: string;\n  title: string;\n};\n\ntype LoaderData = {\n  posts: Array<Post>;\n};\n\nexport const loader = async () => {\n  return json({\n    posts: [\n      {\n        slug: \"my-first-post\",\n        title: \"My First Post\",\n      },\n      {\n        slug: \"90s-mixtape\",\n        title: \"A Mixtape I Made Just For You\",\n      },\n    ],\n  });\n};\n\nexport default function Posts() {\n  const { posts } = useLoaderData() as LoaderData;\n\n  return (\n    <main>\n      <h1 className=\"text-2xl font-bold\">Posts</h1>\n      <ul className=\"list-disc\">\n        {posts.map((post) => (\n          <li key={post.slug}>\n            <Link to={post.slug}>{post.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function Index() {\n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold\">Welcome to Remix</h1>\n      <ul className=\"list-disc\">\n        <li>\n          <Link to=\"posts\">Posts</Link>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/blog\"\n            rel=\"noreferrer\"\n          >\n            15m Quickstart Blog Tutorial\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/jokes\"\n            rel=\"noreferrer\"\n          >\n            Deep Dive Jokes App Tutorial\n          </a>\n        </li>\n        <li>\n          <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n            Remix Docs\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n", "export default {'version':'16af2fd2','entry':{'module':'/build/entry.client-G3YBPJV5.js','imports':['/build/_shared/chunk-DLTVCYXT.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XVYGEF5I.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-63YNE42I.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/$slug':{'id':'routes/posts/$slug','parentId':'root','path':'posts/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/$slug-TPVEXVP4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/index':{'id':'routes/posts/index','parentId':'root','path':'posts','index':true,'caseSensitive':undefined,'module':'/build/routes/posts/index-QJOBMYBA.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-16AF2FD2.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/posts/$slug.tsx\";\nimport * as route2 from \"./routes/posts/index.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/posts/$slug\": {\n      id: \"routes/posts/$slug\",\n      parentId: \"root\",\n      path: \"posts/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/posts/index\": {\n      id: \"routes/posts/index\",\n      parentId: \"root\",\n      path: \"posts\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_node", "import_react", "path", "fs", "remarkParse", "remarkFrontmatter", "invariant", "loader", "import_node", "import_react", "import_react"]
}
